{"version":3,"sources":["Main/S/index.tsx","utils/rotations.ts","Main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["S","rectRef","useRef","directionRef","rotateRef","rect","Konva","Rect","x","y","width","height","fill","stroke","strokeWidth","rect2","segmentList","direction","head","Shape","sceneFunc","context","shape","beginPath","moveTo","lineTo","closePath","fillStrokeShape","offset","useEffect","current","add","Animation","frame","rotationList","segments","attrs","forEach","segment","index","element","position","segmentsPassed","length","filter","start","window","addEventListener","code","push","rotate","console","log","ref","Main","innerWidth","innerHeight","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acd850e8.chunk.js","sourcesContent":["import Konva from \"konva\";\nimport { useEffect, useRef } from \"react\";\nimport { Layer } from \"react-konva\";\nimport { clearRotation } from \"../../utils/rotations\";\n\nconst S = () => {\n  const rectRef: any = useRef();\n  const directionRef = useRef([1, 0]);\n  const rotateRef = useRef<Array<any>>([]);\n  let rect = new Konva.Rect({\n    x: 0,\n    y: 0,\n    width: 50,\n    height: 50,\n    fill: \"#00D2FF\",\n    stroke: \"black\",\n    strokeWidth: 0.5,\n  });\n\n  let rect2 = new Konva.Rect({\n    x: 50,\n    y: 0,\n    width: 50,\n    height: 50,\n    fill: \"#00D2FF\",\n    stroke: \"black\",\n    strokeWidth: 0.5,\n  });\n  const segmentList = useRef([\n    { rect, direction: [1, 0] },\n    { rect: rect2, direction: [1, 0] },\n  ]);\n  var head = new Konva.Shape({\n    sceneFunc: function (context, shape) {\n      context.beginPath();\n      context.moveTo(50, 25);\n      context.lineTo(25, 50);\n      context.lineTo(0, 50);\n      context.lineTo(0, 0);\n      context.lineTo(25, 0);\n      context.closePath();\n      context.fillStrokeShape(shape);\n    },\n    fill: \"#00D2FF\",\n    stroke: \"black\",\n    strokeWidth: 0.5,\n    x: 125,\n    y: 25,\n    offset: {\n      x: 25,\n      y: 25,\n    },\n  });\n\n  useEffect(() => {\n    rectRef.current.add(head);\n    rectRef.current.add(segmentList.current[0].rect);\n    rectRef.current.add(segmentList.current[1].rect);\n    var anim = new Konva.Animation((frame: any) => {\n      head.x(head.attrs.x + directionRef.current[0]);\n      head.y(head.attrs.y - directionRef.current[1]);\n      segmentList.current.forEach((segment, index: number) => {\n        rotateRef.current.forEach((element) => {\n          if (\n            segment.rect.attrs.x === element.position[0] &&\n            segment.rect.attrs.y === element.position[1]\n          ) {\n            element.segmentsPassed = element.segmentsPassed + 1;\n            segment.direction = element.direction;\n          }\n        });\n        segment.rect.x(segment.rect.attrs.x + segment.direction[0]);\n        segment.rect.y(segment.rect.attrs.y - segment.direction[1]);\n      });\n      clearRotation(rotateRef.current, segmentList.current.length - 1);\n    }, rectRef);\n    anim.start();\n  });\n\n  window.addEventListener(\"keypress\", ({ code }) => {\n    if (code === \"KeyW\") {\n      if (\n        (directionRef.current[0] === 1 && directionRef.current[1] === 0) ||\n        (directionRef.current[0] === -1 && directionRef.current[1] === 0)\n      ) {\n        rotateRef.current.push({\n          position: [head.attrs.x - 25, head.attrs.y - 25],\n          direction: [0, 1],\n          segmentsPassed: 0,\n        });\n        head.rotate(directionRef.current[0] * -90);\n        directionRef.current = [0, 1];\n      }\n    } else if (code === \"KeyS\") {\n      if (\n        (directionRef.current[0] === 1 && directionRef.current[1] === 0) ||\n        (directionRef.current[0] === -1 && directionRef.current[1] === 0)\n      ) {\n        console.log(head.attrs.x);\n        rotateRef.current.push({\n          position: [head.attrs.x - 25, head.attrs.y - 25],\n          direction: [0, -1],\n          segmentsPassed: 0,\n        });\n        head.rotate(directionRef.current[0] * 90);\n        directionRef.current = [0, -1];\n      }\n    } else if (code === \"KeyA\") {\n      if (\n        (directionRef.current[0] === 0 && directionRef.current[1] === 1) ||\n        (directionRef.current[0] === 0 && directionRef.current[1] === -1)\n      ) {\n        rotateRef.current.push({\n          position: [head.attrs.x - 25, head.attrs.y - 25],\n          direction: [-1, 0],\n          segmentsPassed: 0,\n        });\n        head.rotate(directionRef.current[1] * -90);\n        directionRef.current = [-1, 0];\n      }\n    } else if (code === \"KeyD\") {\n      if (\n        (directionRef.current[0] === 0 && directionRef.current[1] === 1) ||\n        (directionRef.current[0] === 0 && directionRef.current[1] === -1)\n      ) {\n        rotateRef.current.push({\n          position: [head.attrs.x - 25, head.attrs.y - 25],\n          direction: [1, 0],\n          segmentsPassed: 0,\n        });\n        head.rotate(directionRef.current[1] * 90);\n        directionRef.current = [1, 0];\n      }\n    }\n  });\n\n  return <Layer ref={rectRef} />;\n};\n\nexport default S;\n","export const clearRotation = (rotationList: any, segments: number) => {\n  rotationList = rotationList.filter(\n    ({ segmentsPassed }: any) => segmentsPassed < segments\n  );\n};\n","import { Stage } from \"react-konva\"\nimport S from \"./S\";\n\nconst Main = () => {\n    return <Stage width={window.innerWidth} height={window.innerHeight}> \n    <S/>\n    </Stage>\n}\n\nexport default Main;","import './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}